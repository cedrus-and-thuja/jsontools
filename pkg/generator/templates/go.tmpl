package {{.Config.PackageName}}

//-------------------------------------------------------------
// This file is generated and should not be edited manually
//-------------------------------------------------------------

import (
    "github.com/cedrus-and-thuja/jsontools/pkg/generator"
)

{{- range $i, $schema := .Enums}}
type {{$schema.Title | CapFirst}} {{ $schema | GetGoType}}

const (
    {{- range $i, $enum := $schema.Enum}}
    {{$schema.Title | AllCap}}_{{$enum | AllCap}} {{$schema.Title | CapFirst}} = {{$enum | Literalize}}
    {{- end}}
)
{{end}}


{{- range $i, $schema := .Schemas}}

type {{$schema.Title | CapFirst}} struct {
    {{- range $key, $prop := $schema.Properties}}
    {{$key | CapFirst}} {{$prop | MapType}} `json:"{{$key -}}"`
    {{- end}}
}

{{end}}

const {{.RootSchema.Title | AllCap -}}_SCHEMA = `{{.RootSchema.Data}}`


func(thing {{.RootSchema.Title | CapFirst}}) Validate() error {
    schema, err := generator.LoadSchemaFromString({{.RootSchema.Title | AllCap -}}_SCHEMA)
	if err != nil {
		return err
	}
	asJson, err := json.Marshal(thing)
	if err != nil {
		return err
	}
	object := map[string]interface{}{}
	err = json.Unmarshal(asJson, &object)
	if err != nil {
		return err
	}
	return schema.Validate(object)
}
